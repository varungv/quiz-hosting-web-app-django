# Generated by Django 2.0.4 on 2018-05-29 18:50

from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='BatchTable',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Batch_Name', models.CharField(max_length=50, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='BookmarksTable',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('doubt_description', models.TextField(max_length=1000, null=True)),
                ('Student', models.ForeignKey(on_delete='CASCADE', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='QuestionsTable',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Question', models.CharField(max_length=500)),
                ('Question_Image', models.ImageField(null=True, upload_to='Question_images\\')),
                ('Option_1', models.CharField(max_length=500)),
                ('Option_2', models.CharField(max_length=500)),
                ('Option_3', models.CharField(max_length=500)),
                ('Option_4', models.CharField(max_length=500)),
                ('Correct_option', models.IntegerField(choices=[(1, 1), (2, 2), (3, 3), (4, 4)])),
                ('Solution_Explanation', models.TextField(default='Explanation Not Added', max_length=1000)),
            ],
        ),
        migrations.CreateModel(
            name='SubjectsTable',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Subject_name', models.CharField(max_length=100, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='TestBatchJunction',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Batch', models.ForeignKey(on_delete='CASCADE', to='testApp.BatchTable')),
            ],
        ),
        migrations.CreateModel(
            name='TestSubjectTable',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sub_wise_number_of_questions', models.IntegerField()),
                ('Subject', models.ForeignKey(on_delete='CASCADE', to='testApp.SubjectsTable')),
            ],
        ),
        migrations.CreateModel(
            name='TestTable',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Test_Name', models.CharField(max_length=250, unique=True)),
                ('Test_category', models.CharField(choices=[('Single Subject', 'Single Subject'), ('Multi Subject', 'Multi Subject')], max_length=250)),
                ('Number_of_Questions', models.IntegerField()),
                ('Time_allotted', models.IntegerField()),
                ('Pass_percentage', models.IntegerField(default=35)),
                ('Test_Ready', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='UserExtensionTable',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Batch', models.ForeignKey(on_delete='CASCADE', to='testApp.BatchTable')),
                ('Student', models.ForeignKey(on_delete='CASCADE', to=settings.AUTH_USER_MODEL, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='UserTestJunction',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Status', models.CharField(default='inp', max_length=200)),
                ('result', models.CharField(default='fail', max_length=200)),
                ('Student', models.ForeignKey(on_delete='CASCADE', to=settings.AUTH_USER_MODEL)),
                ('Test', models.ForeignKey(on_delete='CASCADE', to='testApp.TestTable')),
            ],
        ),
        migrations.CreateModel(
            name='UserTestQuestionJunction',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timetaken', models.IntegerField()),
                ('option_selected', models.IntegerField()),
                ('result', models.BooleanField(default=False)),
                ('UserTest', models.ForeignKey(on_delete='CASCADE', to='testApp.UserTestJunction')),
                ('question', models.ForeignKey(on_delete='CASCADE', to='testApp.QuestionsTable')),
            ],
        ),
        migrations.AddField(
            model_name='testsubjecttable',
            name='Test',
            field=models.ForeignKey(on_delete='CASCADE', to='testApp.TestTable'),
        ),
        migrations.AddField(
            model_name='testbatchjunction',
            name='Test',
            field=models.ForeignKey(on_delete='CASCADE', to='testApp.TestTable'),
        ),
        migrations.AddField(
            model_name='questionstable',
            name='Subject',
            field=models.ForeignKey(on_delete='CASCADE', to='testApp.SubjectsTable'),
        ),
        migrations.AddField(
            model_name='questionstable',
            name='Test_Name',
            field=models.ForeignKey(on_delete='CASCADE', to='testApp.TestTable'),
        ),
        migrations.AddField(
            model_name='bookmarkstable',
            name='bookmarked_question',
            field=models.ForeignKey(on_delete='CASCADE', to='testApp.QuestionsTable'),
        ),
    ]
